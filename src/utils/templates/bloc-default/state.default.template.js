import { camelToSnakeCase, getAllFinalVariables, getGetters, getVariableAndType, getVariables, toMap } from "../../utils.js";
var stateDefaultTemplate = function (bloc) {
    var _a, _b, _c, _d, _e, _f;
    return "\npart of '" + camelToSnakeCase(bloc.name) + "_bloc.dart';\n\n@immutable\nclass " + bloc.name + "State {\n  " + getAllFinalVariables((_a = bloc.state.props) !== null && _a !== void 0 ? _a : {}) + "\n\n  " + bloc.name + "State(" + getVariables((_b = bloc.state.props) !== null && _b !== void 0 ? _b : {}, { required: true }) + ");\n\n  @override\n  " + bloc.name + "State copyWith({\n    " + getVariableAndType((_c = bloc.state.props) !== null && _c !== void 0 ? _c : {}) + "}) {\n    return new " + bloc.name + "State(\n      " + Object.keys((_d = bloc.state.props) !== null && _d !== void 0 ? _d : {}).map(function (variable) { return "\t" + variable + ": " + variable + " ?? this." + variable + ",\n"; }).join('') + ");\n  }\n\n  @override\n  toMap() => " + toMap((_e = bloc.state.props) !== null && _e !== void 0 ? _e : {}) + ";\n\n  " + getGetters((_f = bloc.state.getters) !== null && _f !== void 0 ? _f : {}) + "\n}\n";
};
export default stateDefaultTemplate;
//# sourceMappingURL=state.default.template.js.map