import { fromMap, getAllFinalVariables, getClearWithParams, getCopyWithParams, getVariableAndType, getVariables, toMap } from "./utils";
import { EmptyProps } from "./templates/cubit-list/state.cubit-list.template";
import { getVariablesAndDefault } from "./templates/bloc-default/bloc.default.tempalte";
export default (function (bloc, params) {
    var _a, _b, _c, _d, _e, _f;
    if (params === void 0) { params = { postfix: 'State' }; }
    return "\n    " + getAllFinalVariables((_a = bloc.state.props) !== null && _a !== void 0 ? _a : EmptyProps, { addAction: bloc.actionProp }) + "\n  \n    " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + "(" + getVariables((_b = bloc.state.props) !== null && _b !== void 0 ? _b : EmptyProps, {
        required: true,
        addAction: bloc.actionProp
    }) + ");\n  \n    " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + " copyWith({\n      " + getVariableAndType((_c = bloc.state.props) !== null && _c !== void 0 ? _c : EmptyProps, { noRequired: true, addAction: bloc.actionProp }) + "}) {\n      return " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + "(\n        " + getCopyWithParams(bloc, { addAction: bloc.actionProp }) + ");\n    }\n  \n    " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + " clearValue({\n      " + Object.keys((_d = bloc.state.props) !== null && _d !== void 0 ? _d : EmptyProps).map(function (name) { return "\tbool " + name + " = false,\n"; }).join('') + "}) {\n      return " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + "(\n        " + getClearWithParams(bloc, { addAction: bloc.actionProp }) + ");\n    }\n  \n    toJson() => " + toMap((_e = bloc.state.props) !== null && _e !== void 0 ? _e : EmptyProps) + ";\n    \n    static " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + " fromJson(Map<String, dynamic> json) => \n        " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + "(" + fromMap((_f = bloc.state.props) !== null && _f !== void 0 ? _f : EmptyProps, { addAction: bloc.actionProp }) + ");\n    \n    static List<" + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + "> listFromJson(List? json) => (json ?? []).map((e) => " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + ".fromJson(e)).toList();\n    \n    static empty() => " + bloc.name + (params === null || params === void 0 ? void 0 : params.postfix) + "(" + getVariablesAndDefault(bloc, { addAction: bloc.actionProp }) + ");\n  ";
});
var getEnumContent = function (bloc) { var _a; return "" + Object.keys((_a = bloc.state.props) !== null && _a !== void 0 ? _a : EmptyProps).map(function (name) { return "\t" + name + ","; }).join('\n'); };
export { getEnumContent };
//# sourceMappingURL=getStateDefaultCode.js.map